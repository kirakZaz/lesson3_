{
  "swagger": "2.0",
  "info": {
    "title": "Express API for JSONPlaceholder",
    "version": "1.0.0",
    "description":
    "This is a REST API application made with Express. It retrieves data from JSONPlaceholder.",
    "license": {
      "name": "Licensed Under MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    },
    "contact": {
      "name": "Kira Za",
      "email": "kirka.zaz\"gmail.com"
    }
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "User actions"
    }
  ],
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/api/users": {
      "post":{
        "tags": [
          "Users"
        ],
        "summary": "Create user",
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "type": "array"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array"
            }
          }
        }
      },
      "put":{
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "description": "Update new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User was updated",
            "schema": {
              "type": "array"
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get one user",
        "responses": {
        "200": {
           "description": "OK",
           "schema": {
             "type": "array"
           }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete one user",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array"
            }
          }
        }
      }
    }
  }
}